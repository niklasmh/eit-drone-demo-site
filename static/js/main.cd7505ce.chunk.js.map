{"version":3,"sources":["Demo.js","App.js","serviceWorker.js","index.js"],"names":["DemoMap","withScriptjs","withGoogleMap","props","react_default","a","createElement","lib","options","draggable","onClick","defaultZoom","defaultCenter","lat","lng","paths","droneLines","markers","persons","ambulances","drones","position","stations","defaultIcon","url","anchor","x","y","scaledSize","width","height","Demo","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selectedPoint","situations","type","timeInterval","maxAmbulances","maxDronesPerStation","speedup","ambulanceSpeed","droneSpeed","stationIcon","droneIcon","ambulanceIcon","typeIcons","heroin","stroke","strokeFixed","evt","_this2","latLng","setState","objectSpread","window","google","maps","DirectionsService","route","origin","LatLng","destination","travelMode","TravelMode","DRIVING","path","status","DirectionsStatus","OK","slice","stationIndex","_this2$nearestStation","nearestStation","index","stationDist","dist","routes","legs","distance","value","push","time","done","waitForAmbulance","filter","s","totalDistance","length","drone","station","progress","totalDuration","duration","pointsInPath","overview_path","_this$nearestStation","_this3","minDist","Infinity","minIndex","forEach","i","geometry","spherical","computeDistanceBetween","_this4","setInterval","map","e","direction","droneDirection","droneOnStart","_this5","key","directions","preserveViewport","suppressMarkers","icon","Math","min","parseInt","offset","lat2","lng2","id","name","defaultChecked","onChange","handleRadioSelect","htmlFor","selected","bind","googleMapURL","loadingElement","style","containerElement","mapElement","Component","App","showDemo","className","href","Demo_Demo","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd7505ce.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  DirectionsRenderer,\n  Polyline,\n} from 'react-google-maps'\nimport './Demo.css'\n\n/**\n * TODO:\n *\n * - [x] Telle ned droner som er ferdig\n * - [ ] Logo\n * - [x] Støtte 2 typer;\n *    - [x] heroin: bare drone,\n *    - [x] infarkt: ambulanse og drone (om kjappest)\n * - [ ] Gjøre at ambulanse kjøres for å ta resten av de som venter\n */\n\nconst DemoMap = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap\n      options={{ draggable: false }}\n      onClick={props.onClick}\n      defaultZoom={12}\n      defaultCenter={{ lat: 63.4189785, lng: 10.4026859 }}\n    >\n      {props.paths}\n      {props.droneLines}\n      {props.markers}\n      {props.persons}\n      {props.ambulances}\n      {props.drones}\n      <Marker\n        position={props.stations[0]}\n        defaultIcon={{\n          url:\n            'http://icons.iconarchive.com/icons/icons-land/gis-gps-map/256/Hospital-icon.png',\n          anchor: { x: 25, y: 25 },\n          scaledSize: { width: 50, height: 50 },\n        }}\n      />\n    </GoogleMap>\n  )),\n)\n\nexport default class Demo extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedPoint: { lat: 0, lng: 0 },\n      situations: [],\n      stations: [\n        { drones: 0, lat: 63.420457, lng: 10.3904378 },\n        { drones: 0, lat: 63.4173341, lng: 10.3540778 },\n        { drones: 0, lat: 63.4179966, lng: 10.3518891 },\n        { drones: 0, lat: 63.3982869, lng: 10.3971434 },\n        { drones: 0, lat: 63.4031339, lng: 10.427388 },\n        { drones: 0, lat: 63.3874465, lng: 10.3301954 },\n        { drones: 0, lat: 63.4096514, lng: 10.4184723 },\n        { drones: 0, lat: 63.3951255, lng: 10.3692269 },\n        { drones: 0, lat: 63.3933766, lng: 10.3718019 },\n        { drones: 0, lat: 63.4094977, lng: 10.4439425 },\n        { drones: 0, lat: 63.3911854, lng: 10.4300809 },\n        { drones: 0, lat: 63.4249907, lng: 10.4420114 },\n        { drones: 0, lat: 63.4311337, lng: 10.4508948 },\n        { drones: 0, lat: 63.4347805, lng: 10.4143739 },\n        { drones: 0, lat: 63.4344063, lng: 10.4130435 },\n        { drones: 0, lat: 63.4334658, lng: 10.3962421 },\n        { drones: 0, lat: 63.4313689, lng: 10.39783 },\n        { drones: 0, lat: 63.4302508, lng: 10.3935385 },\n        { drones: 0, lat: 63.4306683, lng: 10.39621 },\n      ],\n      type: 'stroke',\n    }\n    this.timeInterval = 100\n    this.maxAmbulances = 1\n    this.maxDronesPerStation = 1\n    this.speedup = 10\n    this.ambulanceSpeed = 200 * this.speedup\n    this.droneSpeed = 80 * this.speedup\n    this.stationIcon = {\n      url:\n        'https://cdn2.iconfinder.com/data/icons/large-home-icons/512/Drugstore_store_pharmacy_medicine_hospital.png',\n      anchor: { x: 15, y: 25 },\n      scaledSize: { width: 30, height: 30 },\n    }\n    this.droneIcon = {\n      url: 'https://png.pngtree.com/svg/20161124/uav_110217.png',\n      anchor: { x: 15, y: 15 },\n      scaledSize: { width: 30, height: 30 },\n    }\n    this.ambulanceIcon = {\n      url:\n        'http://icons.iconarchive.com/icons/google/noto-emoji-travel-places/1024/42545-ambulance-icon.png',\n      anchor: { x: 15, y: 15 },\n      scaledSize: { width: 30, height: 30 },\n    }\n    this.typeIcons = {\n      heroin: {\n        url: 'https://static.thenounproject.com/png/641158-200.png',\n        anchor: { x: 15, y: 15 },\n        scaledSize: { width: 30, height: 30 },\n      },\n      stroke: {\n        url: 'https://static.thenounproject.com/png/893753-200.png',\n        anchor: { x: 15, y: 15 },\n        scaledSize: { width: 30, height: 30 },\n      },\n      strokeFixed: {\n        url:\n          'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d8/Person_icon_BLACK-01.svg/2000px-Person_icon_BLACK-01.svg.png',\n        anchor: { x: 15, y: 25 },\n        scaledSize: { width: 30, height: 30 },\n      },\n    }\n  }\n\n  onClick(evt) {\n    const lat = evt.latLng.lat()\n    const lng = evt.latLng.lng()\n    const position = { lat, lng }\n    this.setState({ ...this.state, selectedPoint: position })\n\n    if (this.state.type === 'stroke') {\n      const DirectionsService = new window.google.maps.DirectionsService()\n      DirectionsService.route(\n        {\n          origin: new window.google.maps.LatLng(63.420457, 10.3904378),\n          destination: new window.google.maps.LatLng(lat, lng),\n          travelMode: window.google.maps.TravelMode.DRIVING,\n        },\n        (path, status) => {\n          if (status === window.google.maps.DirectionsStatus.OK) {\n            const situations = this.state.situations.slice(0)\n            let stationIndex = -1\n            const { index, dist: stationDist } = this.nearestStation(position)\n            if (\n              stationDist / this.droneSpeed <\n              path.routes[0].legs[0].distance.value / this.ambulanceSpeed\n            ) {\n              stationIndex = index\n            }\n            const stations = this.state.stations.slice(0)\n            if (~stationIndex) stations[stationIndex].drones++\n            situations.push({\n              path,\n              position,\n              time: 0,\n              done: false,\n              waitForAmbulance:\n                this.state.situations.filter(s => ~s.totalDistance).length >=\n                this.maxAmbulances,\n              drone: {\n                station: stationIndex,\n                dist: stationDist,\n                progress: 0,\n                done: false,\n                time: 0,\n              },\n              totalDistance: path.routes[0].legs[0].distance.value,\n              totalDuration: path.routes[0].legs[0].duration.value,\n              pointsInPath: path.routes[0].overview_path.length,\n              type: this.state.type,\n            })\n            this.setState({ ...this.state, situations })\n          }\n        },\n      )\n    } else {\n      const situations = this.state.situations.slice(0)\n      const { index: stationIndex, dist: stationDist } = this.nearestStation(\n        position,\n      )\n      const stations = this.state.stations.slice(0)\n      if (~stationIndex) stations[stationIndex].drones++\n      situations.push({\n        path: null,\n        position,\n        time: 0,\n        done: false,\n        waitForAmbulance: false,\n        drone: {\n          station: stationIndex,\n          dist: stationDist,\n          progress: 0,\n          done: false,\n          time: 0,\n        },\n        totalDistance: -1,\n        totalDuration: -1,\n        pointsInPath: 0,\n        type: this.state.type,\n      })\n      this.setState({ ...this.state, situations })\n    }\n  }\n\n  nearestStation(position) {\n    let minDist = Infinity\n    let minIndex = -1\n    this.state.stations.forEach((station, i) => {\n      const dist = window.google.maps.geometry.spherical.computeDistanceBetween(\n        { lat: () => station.lat, lng: () => station.lng },\n        { lat: () => position.lat, lng: () => position.lng },\n      )\n      if (minDist > dist && station.drones < this.maxDronesPerStation) {\n        minDist = dist\n        minIndex = i\n      }\n    })\n\n    return { index: minIndex, dist: minDist }\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      const stations = this.state.stations\n      const situations = this.state.situations\n        .map(e => {\n          const direction = e.done ? -1 : 1\n          const droneDirection = e.drone.done ? -1 : 1\n          const droneOnStart =\n            e.drone.done &&\n            ((e.drone.time / 1000) * this.droneSpeed) / 3.6 / e.drone.dist <= 0\n          if (~e.drone.station && droneOnStart) {\n            stations[e.drone.station].drones--\n          }\n          return {\n            ...e,\n            time:\n              e.time +\n              this.timeInterval * direction * (~e.totalDistance ? 1 : 0),\n            drone: {\n              ...e.drone,\n              time:\n                e.drone.time +\n                this.timeInterval * droneDirection * (~e.drone.station ? 1 : 0),\n              done:\n                e.drone.done ||\n                (((e.drone.time + this.timeInterval * droneDirection) / 1000) *\n                  this.droneSpeed) /\n                  3.6 /\n                  e.drone.dist >=\n                  1,\n              station: droneOnStart ? -1 : e.drone.station,\n            },\n            done:\n              e.done ||\n              (((e.time + this.timeInterval * direction) / 1000) *\n                this.ambulanceSpeed) /\n                3.6 /\n                e.totalDistance >=\n                1,\n          }\n        })\n        .filter(e =>\n          ~e.totalDistance\n            ? !(\n                e.done &&\n                ((e.time / 1000) * this.ambulanceSpeed) /\n                  3.6 /\n                  e.totalDistance <=\n                  0\n              )\n            : ~e.drone.station || e.waitForAmbulance,\n        )\n      this.setState({ ...this.state, situations, stations })\n    }, this.timeInterval)\n  }\n\n  handleRadioSelect(type) {\n    this.setState({ ...this.state, type })\n  }\n\n  render() {\n    const markers = this.state.stations.map((e, i) => {\n      return <Marker position={e} key={i} defaultIcon={this.stationIcon} />\n    })\n\n    const paths = this.state.situations\n      .filter(e => !e.done && e.path !== null)\n      .map((e, i) => (\n        <DirectionsRenderer\n          directions={e.path}\n          key={i}\n          options={{ preserveViewport: true, suppressMarkers: true }}\n        />\n      ))\n\n    const droneLines = this.state.situations\n      .filter(e => !e.drone.done && ~e.drone.station)\n      .map((e, i) => (\n        <Polyline\n          path={[this.state.stations[e.drone.station], e.position]}\n          key={i}\n        />\n      ))\n\n    const persons = this.state.situations\n      .filter(\n        e =>\n          (e.waitForAmbulance || !e.done) &&\n          (!e.waitForAmbulance || !e.drone.done),\n      )\n      .map((e, i) => {\n        let icon = e.type\n        if (e.type === 'stroke' && e.drone.done) {\n          icon = 'strokeFixed'\n        }\n        return (\n          <Marker key={i} position={e.position} icon={this.typeIcons[icon]} />\n        )\n      })\n\n    const ambulances = this.state.situations\n      .filter(e => ~e.totalDistance)\n      .map((e, i) => {\n        const progress =\n          ((e.time / 1000) * this.ambulanceSpeed) / 3.6 / e.totalDistance\n        const index = Math.min(\n          e.pointsInPath - 2,\n          parseInt(progress * e.pointsInPath),\n        )\n        const offset = progress * e.pointsInPath - index\n        const lat = e.path.routes[0].overview_path[index].lat()\n        const lng = e.path.routes[0].overview_path[index].lng()\n        const lat2 = e.path.routes[0].overview_path[index + 1].lat()\n        const lng2 = e.path.routes[0].overview_path[index + 1].lng()\n        return (\n          <Marker\n            key={i}\n            position={{\n              lat: lat + (lat2 - lat) * offset,\n              lng: lng + (lng2 - lng) * offset,\n            }}\n            defaultIcon={this.ambulanceIcon}\n          />\n        )\n      })\n\n    const drones = this.state.situations\n      .filter(e => ~e.drone.station)\n      .map((e, i) => {\n        const progress =\n          ((e.drone.time / 1000) * this.droneSpeed) / 3.6 / e.drone.dist\n        const lat = this.state.stations[e.drone.station].lat\n        const lng = this.state.stations[e.drone.station].lng\n        const lat2 = e.position.lat\n        const lng2 = e.position.lng\n        return (\n          <Marker\n            key={i}\n            position={{\n              lat: lat + (lat2 - lat) * progress,\n              lng: lng + (lng2 - lng) * progress,\n            }}\n            defaultIcon={this.droneIcon}\n          />\n        )\n      })\n\n    return (\n      <div id=\"map\">\n        <span>\n          Ambulanser ledig:{' '}\n          {this.maxAmbulances -\n            this.state.situations.filter(s => ~s.totalDistance).length}{' '}\n          / {this.maxAmbulances}\n        </span>\n        <span>Situasjoner: {this.state.situations.length}</span>\n        <input\n          type=\"radio\"\n          name=\"type\"\n          defaultChecked={true}\n          id=\"stroke\"\n          onChange={() => this.handleRadioSelect('stroke')}\n        />\n        <label htmlFor=\"stroke\">Hjerteinfarkt</label>\n        <input\n          type=\"radio\"\n          name=\"type\"\n          id=\"heroin\"\n          onChange={() => this.handleRadioSelect('heroin')}\n        />\n        <label htmlFor=\"heroin\">Heroinoverdose</label>\n        <DemoMap\n          markers={markers}\n          paths={paths}\n          persons={persons}\n          ambulances={ambulances}\n          drones={drones}\n          droneLines={droneLines}\n          stations={this.state.stations}\n          selected={this.state.selectedPoint}\n          onClick={this.onClick.bind(this)}\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD_QcAdoHfUZgyxnB66tYyRUm6yF759J_o&v=3.exp&libraries=geometry,drawing,places\"\n          loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `100vh` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './App.css'\n\nimport Demo from './Demo'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showDemo: true,\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Effektivisere Akutten med Droner</h1>\n        <p>\n          Dette er en alternativ presentasjonsform i EiT fra gruppe 5 i\n          landsbyen for Fremtidens Smarte Sykehus.\n        </p>\n\n        <p>Nettsiden inneholder:</p>\n        <ol>\n          <li>\n            <a href=\"#demo\">Interaktiv demo av løsning</a>\n          </li>\n          <li>\n            <a href=\"#description\">\n              Beskrivelse av problemet med effektivitet i akutt\n            </a>\n          </li>\n          <li>\n            <a href=\"#solution\">Løsning med droner</a>\n          </li>\n        </ol>\n\n        <h2 id=\"demo\">Interaktiv demo av løsning</h2>\n        <a id=\"play\" href=\"#map\">\n          Start\n        </a>\n        {this.state.showDemo ? <Demo /> : null}\n\n        <h2 id=\"description\">\n          Beskrivelse av problemet med effektivitet i akutt\n        </h2>\n        <p>\n          <i>\n            Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem\n            ipsumLorem ipsum Lorem ipsum Lorem ipsumLorem ipsumLorem ipsumLorem\n            ipsum Lorem ipsum Lorem ipsum Lorem ipsumLorem ipsum Lorem ipsum\n            Lorem ipsumLorem ipsum Lorem ipsum Lorem ipsumLorem ipsumLorem\n            ipsumLorem ipsum Lorem ipsum Lorem ipsum Lorem ipsumLorem ipsum\n            Lorem ipsum Lorem ipsumLorem ipsum Lorem ipsum Lorem ipsumLorem\n            ipsumLorem ipsumLorem ipsum Lorem ipsum Lorem ipsum Lorem ipsumLorem\n            ipsum Lorem ipsum\n          </i>\n        </p>\n        <p>\n          <i>\n            Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem\n            ipsumLorem ipsum Lorem ipsum Lorem ipsumLorem ipsumLorem ipsumLorem\n            ipsum Lorem ipsum Lorem ipsum Lorem ipsumLorem ipsum Lorem ipsum\n            Lorem ipsumLipsum Lorem ipsum Lorem ipsumLorem ipsum Lorem ipsum\n          </i>\n        </p>\n\n        <h2 id=\"solution\">Løsning med droner</h2>\n        <p>\n          <i>\n            Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem\n            ipsumLorem ipsum Lorem ipsum Lorem ipsumLorem ipsumLorem ipsumLorem\n            ipsum Lorem ipsum Lorem ipsum Lorem ipsumLorem ipsum Lorem ipsum\n            Lorem ipsumLorem ipsum Lorem ipsum Lorem ipsumLorem ipsumLorem\n            ipsumLorem ipsum Lorem ipsum Lorem ipsum Lorem ipsumLorem ipsum\n            Lorem ipsum Lorem ipsumLorem ipsum Lorem ipsum Lorem ipsumLorem\n            ipsumLorem ipsumLorem ipsum Lorem ipsum Lorem ipsum Lorem ipsumLorem\n            ipsum Lorem ipsum\n          </i>\n        </p>\n        <p>\n          <i>\n            Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem\n            ipsumLorem ipsum Lorem ipsum Lorem ipsumLorem ipsumLorem ipsumLorem\n            ipsum Lorem ipsum Lorem ipsum Lorem ipsumLorem ipsum Lorem ipsum\n            Lorem ipsumLipsum Lorem ipsum Lorem ipsumLorem ipsum Lorem ipsum\n          </i>\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}